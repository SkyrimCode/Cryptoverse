{"version":3,"sources":["images/cryptoavatar.png","components/Navbar.jsx","services/cryptoApi.js","services/exchangeRateApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","Title","level","src","icon","size","to","style","color","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","exchangeRateHeaders","exchangeRateParams","from","q","exchangeRateApi","getExchangeRate","params","useGetExchangeRateQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","exchangeRate","cryptos","setCryptos","searchTerm","setSearchTerm","coins","filteredData","filter","item","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","Intl","NumberFormat","notation","maximumFractionDigits","format","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","coin","console","log","stats","millify","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","substring","image","thumbnail","contentUrl","alt","provider","moment","datePublished","startOf","fromNow","App","exact","path","element","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"4RAAe,MAA0B,yC,OCwD1BA,EAjDA,WACb,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,wBAASG,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAlBAC,qBAAU,WACR,IAAMC,EAAe,kBAAMF,EAAcG,OAAOC,aAMhD,OAJAD,OAAOE,iBAAiB,SAAUH,GAElCA,IAEO,kBAAMC,OAAOG,oBAAoB,SAAUJ,MACjD,IAEHD,qBAAU,WAENJ,IADEE,GAAc,QAKjB,CAACA,IAGF,sBAAKQ,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UAEE,eAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGF,UAAU,OAAtC,UAA6C,cAAC,IAAD,CAAQG,IAAKC,EAAMC,KAAK,UAAU,cAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAACC,MAAM,QAA3B,4BAC/E,cAAC,IAAD,CAAQR,UAAU,yBAAyBS,QAAS,kBAAMnB,GAAeD,IAAzE,SAAsF,cAACqB,EAAA,EAAD,SAEvFrB,GACD,eAAC,IAAD,CAAMsB,MAAM,OAAOX,UAAU,OAA7B,UACE,cAAC,IAAKY,KAAN,CAAYR,KAAM,cAACS,EAAA,EAAD,IAAlB,SACE,cAAC,IAAD,CAAMP,GAAG,IAAT,oBAEF,cAAC,IAAKM,KAAN,CAAWR,KAAM,cAACU,EAAA,EAAD,IAAjB,SACE,cAAC,IAAD,CAAMR,GAAG,oBAAT,gCAEF,cAAC,IAAKM,KAAN,CAAWR,KAAM,cAACW,EAAA,EAAD,IAAjB,SACE,cAAC,IAAD,CAAMT,GAAG,aAAT,yBAEF,cAAC,IAAKM,KAAN,CAAWR,KAAM,cAACY,EAAA,EAAD,IAAjB,SACE,cAAC,IAAD,CAAMV,GAAG,QAAT,2B,kDC9CJW,EAAmB,CACrB,kBAAmBC,8BACnB,iBAAkBA,sDAGhBC,EAAgB,SAACC,GAAD,MAAU,CAAEA,MAAKC,QAASJ,IAEnCK,EAAYC,YAAU,CACjCC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QAAST,wCACrCU,UAAW,SAACC,GAAD,MAAc,CACvBC,WAAYD,EAAQE,MAAM,CACxBA,MAAO,SAACC,GAAD,OAAWb,EAAc,gBAAD,OAAiBa,OAElDC,aAAcJ,EAAQE,MAAM,CAC1BA,MAAO,kBAAMZ,EAAc,iBAE7Be,iBAAkBL,EAAQE,MAAM,CAC9BA,MAAO,SAACI,GAAD,OAAYhB,EAAc,SAAD,OAAUgB,OAE5CC,iBAAkBP,EAAQE,MAAM,CAC9BA,MAAO,gBAAGI,EAAH,EAAGA,OAAQE,EAAX,EAAWA,WAAX,OAA4BlB,EAAc,QAAD,OAASgB,EAAT,oBAA2BE,WAKlEC,EAAiGhB,EAAjGgB,mBAAoBC,EAA6EjB,EAA7EiB,yBAA0BC,EAAmDlB,EAAnDkB,qBAAsBC,EAA6BnB,EAA7BmB,yBC1B7EC,EAAsB,CAC1B,iBAAiBxB,qDACjB,kBAAmBA,oCAGfyB,EAAqB,CACvBC,KAAM,MAAOtC,GAAI,MAAOuC,EAAG,KAKlBC,EAAkBvB,YAAU,CACvCC,YAAa,kBACbC,UAAWC,YAAe,CAAEC,QAAST,6CACrCU,UAAW,SAACC,GAAD,MAAc,CACvBkB,gBAAiBlB,EAAQE,MAAM,CAC7BA,MAAO,iBAPmB,CAAEX,IAOD,YAPM4B,OAAQL,EAAoBtB,QAASqB,UAY7DO,EAA4BH,EAA5BG,wB,SCdAC,EANA,kBACb,qBAAKlD,UAAU,SAAf,SACE,cAAC,IAAD,OC4CWmD,EAzCU,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAE1B,EAA0Cd,EAD5Bc,EAAa,GAAK,KAClBC,EAAd,EAAQC,KAAmBC,EAA3B,EAA2BA,WACbC,EAAiBP,IAAvBK,KACR,EAA8BlE,qBAA9B,mBAAOqE,EAAP,KAAgBC,EAAhB,KACA,EAAoCtE,mBAAS,IAA7C,mBAAOuE,EAAP,KAAmBC,EAAnB,KAUA,OARAlE,qBAAU,WAAO,IAAD,IACdgE,EAAU,OAACL,QAAD,IAACA,GAAD,UAACA,EAAaC,YAAd,aAAC,EAAmBO,OAE9B,IAAMC,EAAY,OAAGT,QAAH,IAAGA,GAAH,UAAGA,EAAaC,YAAhB,aAAG,EAAmBO,MAAME,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAKC,cAAcC,SAASR,MAEhGD,EAAWI,KACV,CAACT,EAAaM,IAEbJ,EAAmB,cAAC,EAAD,IAGrB,sCACIH,GACA,qBAAKpD,UAAU,gBAAf,SACE,cAAC,IAAD,CAAOoE,YAAY,wBAAwBC,SAAU,SAACC,GAAD,OAAOV,EAAcU,EAAEC,OAAOC,MAAMN,oBAG7F,cAAC,IAAD,CAAKO,OAAQ,CAAC,GAAI,IAAKzE,UAAU,wBAAjC,gBACGyD,QADH,IACGA,OADH,EACGA,EAASiB,KAAI,SAACC,GAAD,OACZ,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAG9E,UAAU,cAAtC,SACE,cAAC,IAAD,CAAwBM,GAAE,kBAAaqE,EAASI,IAAhD,SACE,eAAC,IAAD,CAAMC,MAAK,UAAKL,EAASM,KAAd,aAAuBN,EAASV,MAAQiB,MAAO,qBAAKlF,UAAU,eAAeG,IAAKwE,EAASQ,UAAaC,WAAS,EAA5H,UACE,8CAAY,IAAIC,KAAKC,aAAa,QAAS,CAACC,SAAU,UAAUC,sBAAuB,IAAIC,OAAOd,EAASe,MAAMlC,MACjH,mDAAiB,IAAI6B,KAAKC,aAAa,QAAS,CAACC,SAAU,UAAUC,sBAAuB,IAAIC,OAAOd,EAASgB,UAAUnC,MAC1H,+CAAkBmB,EAASiB,OAA3B,WAJOjB,EAASI,KADmCJ,EAASI,a,4GC7BpE9E,I,OAAU4F,IAAV5F,OAsDO6F,GApDG,SAAC,GAKjB,IAL8D,IAAD,EAA1CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACxCC,EAAY,GACZC,EAAgB,GACR3C,EAAiBP,IAAvBK,KAEC8C,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAazC,YAAhB,iBAAG,EAAmB+C,eAAtB,aAAG,EAA4BC,QAAQF,GAAK,EAAG,CAAC,IAAD,MAC9DF,EAAUK,MAAgB,OAAXR,QAAW,IAAXA,GAAA,UAAAA,EAAazC,YAAb,eAAmB+C,QAAQD,GAAGV,OAAMlC,GAGrD,IAAK,IAAI4C,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAazC,YAAhB,iBAAG,EAAmB+C,eAAtB,aAAG,EAA4BC,QAAQF,GAAK,EAAG,CAAC,IAAD,MAC9DD,EAAcI,KAAK,IAAIC,KAAJ,OAAST,QAAT,IAASA,GAAT,UAASA,EAAazC,YAAtB,aAAS,EAAmB+C,QAAQD,GAAGK,WAAWC,sBAGvE,IAAMpD,EAAO,CACXqD,OAAQR,EACRS,SAAU,CACR,CACEC,MAAO,eACPvD,KAAM4C,EACNY,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAiBnB,OACE,qCACE,eAAC,IAAD,CAAKhH,UAAU,eAAf,UACE,eAACC,GAAD,CAAOC,MAAO,EAAGF,UAAU,cAA3B,UAA0CiG,EAA1C,mBACA,eAAC,IAAD,CAAKjG,UAAU,kBAAf,UACE,eAACC,GAAD,CAAOC,MAAO,EAAGF,UAAU,eAA3B,4BAAmD+F,QAAnD,IAAmDA,GAAnD,UAAmDA,EAAazC,YAAhE,aAAmD,EAAmBsC,OAAtE,OACA,eAAC3F,GAAD,CAAOC,MAAO,EAAGF,UAAU,gBAA3B,qBAAoDiG,EAApD,kBAAwE,IAAIZ,KAAKC,aAAa,SAASG,OAAOO,YAGlH,cAAC,KAAD,CAAM1C,KAAMA,EAAM2D,QArBN,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,aC1BjBpH,GAAgB4F,IAAhB5F,MAAOqH,GAASzB,IAATyB,KACPC,GAAWC,IAAXD,OA6FOE,GA3FO,WAAO,IAAD,QAClBtF,EAAWuF,cAAXvF,OACR,EAAoC/C,mBAAS,MAA7C,mBAAOiD,EAAP,KAAmBsF,EAAnB,KACA,EAA6BpF,EAAyBJ,GAA9CmB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACAwC,EAAgBtD,EAAyB,CAAEN,SAAQE,eAAzDiB,KACME,EAAiBP,IAAvBK,KACFsE,EAAa,OAAGtE,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYuE,KAElC,GADAC,QAAQC,IAAI,iBAAiBhC,GACzBxC,EAAY,OAAO,cAAC,EAAD,IAEvB,IAEMyE,EAAQ,CACZ,CAAEhD,MAAO,eAAgBR,MAAM,UAAD,OAAOoD,EAAclC,OAASuC,IAAQL,EAAclC,MAAMlC,IAAiBpD,KAAM,cAAC8H,EAAA,EAAD,KAC/G,CAAElD,MAAO,OAAQR,MAAOoD,EAAc3C,KAAM7E,KAAM,cAAC+H,EAAA,EAAD,KAClD,CAAEnD,MAAO,aAAcR,MAAM,UAAD,OAAOoD,EAAcQ,QAAUH,IAAQL,EAAcQ,OAAO5E,IAAiBpD,KAAM,cAACiI,EAAA,EAAD,KAC/G,CAAErD,MAAO,aAAcR,MAAM,UAAD,OAAOoD,EAAcjC,WAAasC,IAAQL,EAAcjC,UAAUnC,IAAiBpD,KAAM,cAAC8H,EAAA,EAAD,KACrH,CAAElD,MAAO,4BAA6BR,MAAM,UAAD,OAAOyD,IAAQL,EAAcU,YAAY5C,MAAMlC,IAAiBpD,KAAM,cAACmI,EAAA,EAAD,MAG7GC,EAAe,CACnB,CAAExD,MAAO,oBAAqBR,MAAOoD,EAAca,gBAAiBrI,KAAM,cAACU,EAAA,EAAD,KAC1E,CAAEkE,MAAO,sBAAuBR,MAAOoD,EAAcc,kBAAmBtI,KAAM,cAACW,EAAA,EAAD,KAC9E,CAAEiE,MAAO,kBAAmBR,MAAOoD,EAAce,eAAiB,cAACC,EAAA,EAAD,IAAoB,cAACC,EAAA,EAAD,IAAkBzI,KAAM,cAAC0I,EAAA,EAAD,KAC9G,CAAE9D,MAAO,eAAgBR,MAAM,UAAD,OAAOyD,IAAQL,EAAcmB,YAAYvF,IAAiBpD,KAAM,cAAC0I,EAAA,EAAD,KAC9F,CAAE9D,MAAO,qBAAsBR,MAAM,UAAD,OAAOyD,IAAQL,EAAcoB,kBAAkBxF,IAAiBpD,KAAM,cAAC0I,EAAA,EAAD,MAG5G,OACE,eAAC,IAAD,CAAK9I,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,yBAAf,UACE,eAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,YAA3B,iBACGsD,QADH,IACGA,GADH,UACGA,EAAMA,YADT,aACG,EAAYuE,KAAK5D,KADpB,YAC4BX,QAD5B,IAC4BA,GAD5B,UAC4BA,EAAMA,YADlC,aAC4B,EAAYuE,KAAKoB,KAD7C,aAGA,8BAAIrB,EAAc3D,KAAlB,0FAEF,cAAC,IAAD,CAAQiF,aAAa,KAAKlJ,UAAU,oBAAoBoE,YAAY,oBAAoBC,SAAU,SAACG,GAAD,OAAWmD,EAAcnD,IAA3H,SA1BS,CAAC,MAAO,KAAM,MAAO,KAAM,MA2B5BE,KAAI,SAACyE,GAAD,OAAU,cAAC5B,GAAD,UAAoB4B,GAAPA,QAEnC,cAAC,GAAD,CAAWpD,YAAaA,EAAaC,aAAc4B,EAAclC,MAAMlC,EAAcyC,SAAU2B,EAAc3D,OAC7G,eAAC,IAAD,CAAKjE,UAAU,kBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,eAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,uBAA3B,UAAmD4H,EAAc3D,KAAjE,uBACA,uEAA0C2D,EAAc3D,KAAxD,6EAED+D,EAAMtD,KAAI,gBAAGtE,EAAH,EAAGA,KAAM4E,EAAT,EAASA,MAAOR,EAAhB,EAAgBA,MAAhB,OACT,eAAC,IAAD,CAAKxE,UAAU,aAAf,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAACsH,GAAD,UAAOlH,IACP,cAACkH,GAAD,UAAOtC,OAET,cAACsC,GAAD,CAAMtH,UAAU,QAAhB,SAAyBwE,aAI/B,eAAC,IAAD,CAAKxE,UAAU,mBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,cAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,uBAA3B,8BACA,uEAA0C4H,EAAc3D,KAAxD,6EAEDuE,EAAa9D,KAAI,gBAAGtE,EAAH,EAAGA,KAAM4E,EAAT,EAASA,MAAOR,EAAhB,EAAgBA,MAAhB,OAChB,eAAC,IAAD,CAAKxE,UAAU,aAAf,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAACsH,GAAD,UAAOlH,IACP,cAACkH,GAAD,UAAOtC,OAET,cAACsC,GAAD,CAAMtH,UAAU,QAAhB,SAAyBwE,gBAKjC,eAAC,IAAD,CAAKxE,UAAU,iBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,YAAf,UACE,eAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,uBAA3B,qBAA2D4H,EAAc3D,KAAzE,OACCmF,YAAgBxB,EAAcyB,gBAEjC,eAAC,IAAD,CAAKrJ,UAAU,aAAf,UACE,eAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,uBAA3B,UAAmD4H,EAAc3D,KAAjE,YADF,UAEG2D,EAAc0B,aAFjB,aAEG,EAAqB5E,KAAI,SAAC6E,GAAD,OACxB,eAAC,IAAD,CAAKvJ,UAAU,YAAf,UACE,cAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,YAA3B,SAAwCuJ,EAAKC,OAC7C,mBAAGC,KAAMF,EAAKnI,IAAKmD,OAAO,SAASmF,IAAI,aAAvC,SAAqDH,EAAKtF,SAF5BsF,EAAKtF,mB,UCvFzCqD,GAASzB,IAATyB,KACAqC,GAAUC,KAAVD,MAgDOE,GA9CG,WAAO,IAAD,EACtB,EAA6BrH,IAArBc,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRuG,EAAa,OAAGxG,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYyG,UAElC,OAAIxG,EAAmB,cAAC,EAAD,IAGrB,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKyG,KAAM,EAAX,uBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,8BACA,cAAC,IAAD,CAAKA,KAAM,EAAX,qBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,uBAEF,cAAC,IAAD,UACGF,EAAcpF,KAAI,SAACuF,EAAS7D,GAAV,OACjB,cAAC,IAAD,CAAK4D,KAAM,GAAX,SACE,cAAC,KAAD,UACE,cAACL,GAAD,CAEEO,WAAW,EACXC,OACA,cAAC,IAAD,CAAKH,KAAM,GAAX,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKA,KAAM,EAAX,UACE,cAAC,GAAD,UAAM,mCAAS5D,EAAE,EAAX,SACN,cAAC,IAAD,CAAQpG,UAAU,iBAAiBG,IAAK8J,EAAS9E,UACjD,cAAC,GAAD,UAAM,iCAAS8E,EAAShG,YAE1B,eAAC,IAAD,CAAK+F,KAAM,EAAX,cAAgB/B,IAAQgC,EAAS7B,WACjC,cAAC,IAAD,CAAK4B,KAAM,EAAX,SAAe/B,IAAQgC,EAASxB,mBAChC,eAAC,IAAD,CAAKuB,KAAM,EAAX,UAAe/B,IAAQgC,EAASG,aAAhC,SARQH,EAASlF,MALvB,SAkBGqE,YAAgBa,EAASZ,aAAe,KAjBpCY,EAASlF,iB,UCpBtB9E,GAAU4F,IAAV5F,MAkCOoK,GAhCE,WAAO,IAAD,EACrB,EAA6B/H,EAAmB,IAAxCgB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACAC,EAAiBP,IAAvBK,KACFgH,EAAW,OAAGhH,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAY0E,MAGhC,OADAF,QAAQC,IAAI,aAAavE,GACrBD,EAAmB,cAAC,EAAD,IAGrB,qCACE,cAAC,GAAD,CAAOrD,MAAO,EAAGF,UAAU,WAA3B,sCACA,eAAC,IAAD,CAAKyE,OAAQ,CAAC,GAAI,IAAlB,UACE,cAAC,IAAD,CAAKuF,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWhF,MAAM,yBAAyBR,MAAO8F,EAAYC,UAC5E,cAAC,IAAD,CAAKP,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWhF,MAAM,kBAAkBR,MAAO,IAAIa,KAAKC,aAAa,QAAS,CAACC,SAAU,UAAUC,sBAAuB,IAAIC,OAAO6E,EAAYE,oBAC3J,cAAC,IAAD,CAAKR,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWhF,MAAM,oBAAoBR,MAAK,gBAAM,IAAIa,KAAKC,aAAa,QAAS,CAACC,SAAU,UAAUC,sBAAuB,IAAIC,OAAO6E,EAAYG,eAAejH,QAChL,cAAC,IAAD,CAAKwG,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWhF,MAAM,mBAAmBR,MAAK,gBAAM,IAAIa,KAAKC,aAAa,QAAS,CAACC,SAAU,UAAUC,sBAAuB,IAAIC,OAAO6E,EAAYI,eAAelH,QAC/K,cAAC,IAAD,CAAKwG,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWhF,MAAM,gBAAgBR,MAAO,IAAIa,KAAKC,aAAa,QAAS,CAACC,SAAU,UAAUC,sBAAuB,IAAIC,OAAO6E,EAAYK,qBAE3J,sBAAK3K,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,WAA3B,yCACA,cAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,YAA3B,SAAuC,cAAC,IAAD,CAAMM,GAAG,oBAAT,4BAEzC,cAAC,EAAD,CAAkB8C,YAAU,IAC5B,sBAAKpD,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,WAA3B,gCACA,cAAC,GAAD,CAAOE,MAAO,EAAd,SAAiB,cAAC,IAAD,CAAMI,GAAG,QAAT,4BAEnB,cAAC,GAAD,CAAM8C,YAAU,Q,qBCrChBwH,GAAoB,CACxB,iBAAkB,OAClB,iBAAkB1J,qDAClB,kBAAmBA,oCAKR2J,GAAgBtJ,YAAU,CACrCC,YAAa,gBACbC,UAAWC,YAAe,CAAEC,QAAST,6CACrCU,UAAW,SAACC,GAAD,MAAc,CACvBiJ,cAAejJ,EAAQE,MAAM,CAC3BA,MAAO,gBAAGgJ,EAAH,EAAGA,aAAc/I,EAAjB,EAAiBA,MAAjB,MAPmB,CAAEZ,IAOsB,kBAAD,OAAmB2J,EAAnB,8DAAqF/I,GAPrGX,QAASuJ,WAYjCI,GAA0BH,GAA1BG,sBCZTC,GAAY,kEAEV3D,GAAgBzB,IAAhByB,KAAMrH,GAAU4F,IAAV5F,MACNsH,GAAWC,IAAXD,OAkDO2D,GAhDF,SAAC,GAAoB,IAAD,IAAjB9H,EAAiB,EAAjBA,WACd,EAAwChE,mBAAS,kBAAjD,mBAAO2L,EAAP,KAAqBI,EAArB,KACQ7H,EAAShB,EAAmB,KAA5BgB,KACM8H,EAAeJ,GAAsB,CAAED,eAAc/I,MAAOoB,EAAa,EAAI,KAAnFE,KAER,OAAI,OAAC8H,QAAD,IAACA,OAAD,EAACA,EAAY5G,OAGf,eAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,IAAlB,WACIrB,GACA,cAAC,IAAD,CAAK4G,KAAM,GAAX,SACE,eAAC,IAAD,CACEqB,YAAU,EACVrL,UAAU,cACVoE,YAAY,kBACZkH,iBAAiB,WACjBjH,SAAU,SAACG,GAAD,OAAW2G,EAAgB3G,IACrC+G,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,SAASxH,cAAcyH,QAAQH,EAAMtH,gBAAkB,GANjG,UAQE,cAAC,GAAD,CAAQM,MAAM,gBAAd,4BARF,OASGlB,QATH,IASGA,GATH,UASGA,EAAMA,YATT,iBASG,EAAYO,aATf,aASG,EAAmBa,KAAI,SAACC,GAAD,OAAc,cAAC,GAAD,CAAQH,MAAOG,EAASV,KAAxB,SAA+BU,EAASV,eAInFmH,EAAW5G,MAAME,KAAI,SAACkH,EAAMxF,GAAP,uBACpB,cAAC,IAAD,CAAKxB,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACE,cAAC,IAAD,CAAMM,WAAS,EAACpF,UAAU,YAA1B,SACE,oBAAGyJ,KAAMmC,EAAKxK,IAAKmD,OAAO,SAASmF,IAAI,aAAvC,UACE,sBAAK1J,UAAU,uBAAf,UACE,cAAC,GAAD,CAAOA,UAAU,aAAaE,MAAO,EAArC,SAAyC0L,EAAK3H,KAAKqC,OAAS,GAAnB,UAA2BsF,EAAK3H,KAAK4H,UAAU,EAAE,IAAjD,OAA0DD,EAAK3H,OACxG,qBAAK9D,KAAS,OAAJyL,QAAI,IAAJA,GAAA,UAAAA,EAAME,aAAN,mBAAaC,iBAAb,eAAwBC,aAAcf,GAAWgB,IAAI,QAEjE,4BAAIL,EAAKvC,YAAY/C,OAAS,IAA1B,UAAmCsF,EAAKvC,YAAYwC,UAAU,EAAG,KAAjE,OAA6ED,EAAKvC,cACtF,sBAAKrJ,UAAU,qBAAf,UACE,gCACE,cAAC,IAAD,CAAQG,KAAK,UAAAyL,EAAKM,SAAS,UAAd,mBAAkBJ,aAAlB,mBAAyBC,iBAAzB,eAAoCC,aAAcf,GAAWgB,IAAI,KAC9E,cAAC,GAAD,CAAMjM,UAAU,gBAAhB,mBAAiC4L,EAAKM,SAAS,UAA/C,aAAiC,EAAkBjI,UAErD,cAAC,GAAD,UAAOkI,KAAOP,EAAKQ,eAAeC,QAAQ,MAAMC,qBAbvBlG,SApBR,cAAC,EAAD,K,OC4BlBmG,I,GAAAA,GAxCf,WACI,OACI,sBAAKvM,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,OAAf,UACI,cAAC,IAAD,UACI,qBAAKA,UAAU,SAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwM,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,GAAD,MAE/B,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,oBAAoBC,QAAS,cAAC,EAAD,MAE/C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaC,QAAS,cAAC,GAAD,MAExC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,kBAAkBC,QAAU,cAAC,GAAD,MAE9C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,QAAQC,QAAS,cAAC,GAAD,aAMnD,sBAAK1M,UAAU,SAAf,UACI,eAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGK,MAAO,CAACC,MAAM,QAAQmM,UAAU,UAA5D,wBACe,uBADf,yBAIA,eAAC,IAAD,WACI,cAAC,IAAD,CAAMrM,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,+B,oCChCLsM,gBAAe,CAC5BC,SAAO,sBACJvL,EAAUE,YAAcF,EAAUuL,SAD9B,gBAEJhC,GAAcrJ,YAAcqJ,GAAcgC,SAFtC,gBAGJ/J,EAAgBtB,YAAcsB,EAAgB+J,SAH1C,MCETC,IAASC,OACL,cAAC,IAAD,UACI,cAAC,KAAD,CAAUC,MAAOA,GAAjB,SACI,cAAC,GAAD,QAEEC,SAASC,eAAe,W","file":"static/js/main.164fd66d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptoavatar.ad4d030b.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptoavatar.png';\r\n\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize <= 800) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        \r\n        <Typography.Title level={3} className=\"logo\"><Avatar src={icon} size='large' /><Link to=\"/\" style={{color:'#FFF'}}>Cryptoverse</Link></Typography.Title>\r\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n      </div>\r\n      {activeMenu && (\r\n      <Menu theme='dark' className='menu'>\r\n        <Menu.Item  icon={<HomeOutlined />}>\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<FundOutlined />}>\r\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<MoneyCollectOutlined />}>\r\n          <Link to=\"/exchanges\">Exchanges</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<BulbOutlined />}>\r\n          <Link to=\"/news\">News</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': process.env.REACT_APP_COIN_RAPIDAPI_HOST,\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n};\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_COIN_URL }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest('/exchanges'),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst exchangeRateHeaders = {\r\n  'x-rapidapi-key':process.env.REACT_APP_RAPIDAPI_KEY,\r\n  'x-rapidapi-host': process.env.REACT_APP_EXCHANGE_RATE_RAPIDAPI_HOST,\r\n};\r\n\r\nconst exchangeRateParams = {\r\n    from: 'USD', to: 'INR', q: '1'\r\n}\r\n\r\nconst createRequest = (url) => ({ url, params: exchangeRateParams, headers: exchangeRateHeaders });\r\n\r\nexport const exchangeRateApi = createApi({\r\n  reducerPath: 'exchangeRateApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_EXCHANGE_RATE_URL }),\r\n  endpoints: (builder) => ({\r\n    getExchangeRate: builder.query({\r\n      query: () => createRequest('/exchange'),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetExchangeRateQuery } = exchangeRateApi;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { useGetExchangeRateQuery } from '../services/exchangeRateApi';\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const { data: exchangeRate } = useGetExchangeRateQuery();\r\n  const [cryptos, setCryptos] = useState();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    setCryptos(cryptosList?.data?.coins);\r\n\r\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\r\n\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value.toLowerCase())} />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n            <Link key={currency.id} to={`/crypto/${currency.id}`}>\r\n              <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\r\n                <p>Price: ₹{new Intl.NumberFormat('en-IN', {notation: \"compact\",maximumFractionDigits: 1}).format(currency.price*exchangeRate)}</p>\r\n                <p>Market Cap: ₹{new Intl.NumberFormat('en-IN', {notation: \"compact\",maximumFractionDigits: 1}).format(currency.marketCap*exchangeRate)}</p>\r\n                <p>Daily Change: {currency.change}%</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;","import React from 'react';\r\nimport {Chart, Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nimport { Col, Row, Typography } from 'antd';\r\nimport { useGetExchangeRateQuery } from '../services/exchangeRateApi';\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n  const { data: exchangeRate } = useGetExchangeRateQuery();\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price*exchangeRate);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In INR',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: ₹ {new Intl.NumberFormat('en-IN').format(currentPrice)}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport { useGetExchangeRateQuery } from '../services/exchangeRateApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const { data: exchangeRate } = useGetExchangeRateQuery();\r\n  const cryptoDetails = data?.data?.coin;\r\n  console.log(\"Coinhistory = \",coinHistory)\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['24h', '7d', '30d', '1y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to INR', value: `₹ ${cryptoDetails.price && millify(cryptoDetails.price*exchangeRate)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `₹ ${cryptoDetails.volume && millify(cryptoDetails.volume*exchangeRate)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `₹ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap*exchangeRate)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `₹ ${millify(cryptoDetails.allTimeHigh.price*exchangeRate)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Approved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `₹ ${millify(cryptoDetails.totalSupply*exchangeRate)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `₹ ${millify(cryptoDetails.circulatingSupply*exchangeRate)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in Indian Rupees (INR). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={cryptoDetails.price*exchangeRate} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange,i) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                <Col span={24}>\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{i+1}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  </Col>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse> \r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","import React from 'react';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { useGetExchangeRateQuery } from '../services/exchangeRateApi';\r\nimport {Cryptocurrencies,News} from '../components'\r\nimport Loader from './Loader';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const { data: exchangeRate } = useGetExchangeRateQuery();\r\n  const globalStats = data?.data?.stats;\r\n\r\n  console.log(\"Exchage r=\",exchangeRate)\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"opensans\">Global Crypto Statistics</Title>\r\n      <Row gutter={[32, 32]}>\r\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={new Intl.NumberFormat('en-IN', {notation: \"compact\",maximumFractionDigits: 1}).format(globalStats.totalExchanges)} /></Col>\r\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`₹${new Intl.NumberFormat('en-IN', {notation: \"compact\",maximumFractionDigits: 1}).format(globalStats.totalMarketCap*exchangeRate)}`} /></Col>\r\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`₹${new Intl.NumberFormat('en-IN', {notation: \"compact\",maximumFractionDigits: 1}).format(globalStats.total24hVolume*exchangeRate)}`} /></Col>\r\n        <Col span={12}><Statistic title=\"Total Markets\" value={new Intl.NumberFormat('en-IN', {notation: \"compact\",maximumFractionDigits: 1}).format(globalStats.totalMarkets)} /></Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"opensans\">Top 10 Cryptos In The World</Title>\r\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"opensans\">Latest Crypto News</Title>\r\n        <Title level={3}><Link to=\"/news\">Show More</Link></Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders = {\r\n  'x-bingapis-sdk': 'true',\r\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n  'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\r\n};\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: 'cryptoNewsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from 'react';\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport Loader from './Loader';\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\r\n\r\n  if (!cryptoNews?.value) return <Loader />;\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n          >\r\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>{news.name.length > 50 ? `${news.name.substring(0,50)}...`:news.name}</Title>\r\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n              </div>\r\n              <p>{news.description.length > 200 ? `${news.description.substring(0, 200)}...` : news.description}</p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                </div>\r\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default News;","import React from 'react'\r\nimport {Routes, Route, Link} from 'react-router-dom'\r\nimport {Layout,Typography,Space} from 'antd'\r\nimport {Navbar,Homepage,Cryptocurrencies,Exchanges,CryptoDetails,News} from './components'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='app'>\r\n            <div className='navbar'>\r\n                <Navbar/>\r\n            </div>\r\n            <div className='main'>\r\n                <Layout>\r\n                    <div className='routes'>\r\n                        <Routes>\r\n                            <Route exact path='/' element={<Homepage/>}/>\r\n                                \r\n                            <Route exact path='/cryptocurrencies' element={<Cryptocurrencies/>}/>\r\n\r\n                            <Route exact path='/exchanges' element={<Exchanges/>}/>\r\n\r\n                            <Route exact path='/crypto/:coinId' element={ <CryptoDetails/>}/>\r\n\r\n                            <Route exact path='/news' element={<News/>}/>\r\n\r\n                        </Routes>\r\n                    </div>\r\n                </Layout>\r\n            \r\n            <div className='footer'>\r\n                <Typography.Title level={5} style={{color:'white',textAlign:'center'}}>\r\n                    Cryptoverse<br/>\r\n                    All rights reserved\r\n                </Typography.Title>\r\n                <Space>\r\n                    <Link to='/'>Home</Link>\r\n                    <Link to='/exchanges'>Exchanges</Link>\r\n                    <Link to='/news'>News</Link>\r\n                </Space>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\nimport { exchangeRateApi } from '../services/exchangeRateApi';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    [exchangeRateApi.reducerPath]: exchangeRateApi.reducer\r\n  },\r\n});","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {HashRouter as Router} from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport 'antd/dist/antd.css'\r\nimport store from './app/store'\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </Router>,document.getElementById('root'));"],"sourceRoot":""}